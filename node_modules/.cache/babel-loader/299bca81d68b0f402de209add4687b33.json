{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\my-app\\\\src\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import { findAllInRenderedTree } from \"react-dom/cjs/react-dom-test-utils.production.min\";\n\nimport './App.css';\nimport { options, DropDownContainer, DropDownHeader, DropDownList, DropDownListContainer, ListItem } from './dropdown.js';\nimport buttonHit, { Button } from './buttonHit.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n    console.log(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/\",\n    method: \"get\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"question\",\n      htmlFor: \"header-search\",\n      children: \"How do you feel today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDownContainer, {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(DropDownHeader, {\n        onClick: toggling,\n        children: selectedOption || \"Choose an Emotion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(DropDownListContainer, {\n        children: /*#__PURE__*/_jsxDEV(DropDownList, {\n          children: options.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: onOptionClicked(option),\n            children: option\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: buttonHit(selectedOption),\n      children: \"Receive Advice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"BpVbkn/NswzhRYWTNyv0RP2ekPc=\");\n\n_c = Search;\n;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/david/my-app/src/search.js"],"names":["React","useState","options","DropDownContainer","DropDownHeader","DropDownList","DropDownListContainer","ListItem","buttonHit","Button","Search","isOpen","setIsOpen","selectedOption","setSelectedOption","toggling","onOptionClicked","value","console","log","map","option","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,EAAiBC,iBAAjB,EAAoCC,cAApC,EAAoDC,YAApD,EAAkEC,qBAAlE,EAAyFC,QAAzF,QAAwG,eAAxG;AACA,OAAOC,SAAP,IAAmBC,MAAnB,QAAgC,gBAAhC;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMc,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAACD,MAAF,CAAhC;;AAEA,QAAMK,eAAe,GAAGC,KAAK,IAAI,MAAM;AACrCH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACD,GAJD;;AAKE,sBACA;AAAM,IAAA,MAAM,EAAC,GAAb;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAG,UAAnB;AAA8B,MAAA,OAAO,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,iBAAD;AAAmB,MAAA,SAAS,EAAG,UAA/B;AAAA,8BACA,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEE,QAAzB;AAAA,kBACGF,cAAc,IAAI;AADrB;AAAA;AAAA;AAAA;AAAA,cADA,EAICF,MAAM,iBACL,QAAC,qBAAD;AAAA,+BACE,QAAC,YAAD;AAAA,oBACGT,OAAO,CAACkB,GAAR,CAAYC,MAAM,iBACjB,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEL,eAAe,CAACK,MAAD,CAAlC;AAAA,sBACGA;AADH,aAAiDC,IAAI,CAACC,MAAL,EAAjD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAqBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEf,SAAS,CAACK,cAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA2BH;;GAtCQH,M;;KAAAA,M;AAsCR;AACD,eAAeA,MAAf","sourcesContent":["import React, {useState} from \"react\";\r\n//import { findAllInRenderedTree } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport './App.css';\r\nimport {options, DropDownContainer, DropDownHeader, DropDownList, DropDownListContainer, ListItem} from './dropdown.js'\r\nimport buttonHit, {Button} from './buttonHit.js'\r\n\r\n\r\nfunction Search (){\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const toggling = () => setIsOpen(!isOpen);\r\n\r\n  const onOptionClicked = value => () => {\r\n    setSelectedOption(value);\r\n    setIsOpen(false);\r\n    console.log(selectedOption);\r\n  };\r\n    return (\r\n    <form action=\"/\" method=\"get\"> \r\n        <label className = \"question\" htmlFor=\"header-search\">\r\n            How do you feel today?\r\n        </label>\r\n        <DropDownContainer className = \"dropdown\">\r\n        <DropDownHeader onClick={toggling}>\r\n          {selectedOption || \"Choose an Emotion\"}\r\n        </DropDownHeader>\r\n        {isOpen && (\r\n          <DropDownListContainer>\r\n            <DropDownList>\r\n              {options.map(option => (\r\n                <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\r\n                  {option}\r\n                </ListItem>\r\n              ))}\r\n            </DropDownList>\r\n          </DropDownListContainer>\r\n        )}\r\n        \r\n      </DropDownContainer>\r\n        <Button onClick={buttonHit(selectedOption)}>\r\n            Receive Advice\r\n        </Button>\r\n    </form>\r\n    )\r\n};\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}