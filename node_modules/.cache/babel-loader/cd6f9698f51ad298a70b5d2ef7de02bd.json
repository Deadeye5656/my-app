{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\david\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";//import { findAllInRenderedTree } from \"react-dom/cjs/react-dom-test-utils.production.min\";\nimport'./App.css';import{options,DropDownContainer,DropDownHeader,DropDownList,DropDownListContainer,ListItem}from'./dropdown.js';import buttonHit,{Button}from'./buttonHit.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Search(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedOption=_useState4[0],setSelectedOption=_useState4[1];var toggling=function toggling(){return setIsOpen(!isOpen);};var onOptionClicked=function onOptionClicked(value){return function(){setSelectedOption(value);setIsOpen(false);console.log(selectedOption);};};return/*#__PURE__*/_jsxs(\"form\",{action:\"/\",method:\"get\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"question\",htmlFor:\"header-search\",children:\"How do you feel today?\"}),/*#__PURE__*/_jsxs(DropDownContainer,{className:\"dropdown\",children:[/*#__PURE__*/_jsx(DropDownHeader,{onClick:toggling,children:selectedOption||\"Choose an Emotion\"}),isOpen&&/*#__PURE__*/_jsx(DropDownListContainer,{children:/*#__PURE__*/_jsx(DropDownList,{children:options.map(function(option){return/*#__PURE__*/_jsx(ListItem,{onClick:onOptionClicked(option),children:option},Math.random());})})})]}),/*#__PURE__*/_jsx(Button,{onClick:buttonHit(selectedOption),children:\"Receive Advice\"})]});};export default Search;","map":{"version":3,"sources":["C:/Users/david/my-app/src/search.js"],"names":["React","useState","options","DropDownContainer","DropDownHeader","DropDownList","DropDownListContainer","ListItem","buttonHit","Button","Search","isOpen","setIsOpen","selectedOption","setSelectedOption","toggling","onOptionClicked","value","console","log","map","option","Math","random"],"mappings":"oHAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA;AACA,MAAO,WAAP,CACA,OAAQC,OAAR,CAAiBC,iBAAjB,CAAoCC,cAApC,CAAoDC,YAApD,CAAkEC,qBAAlE,CAAyFC,QAAzF,KAAwG,eAAxG,CACA,MAAOC,CAAAA,SAAP,EAAmBC,MAAnB,KAAgC,gBAAhC,C,wFAGA,QAASC,CAAAA,MAAT,EAAkB,CAChB,cAA4BT,QAAQ,CAAC,KAAD,CAApC,wCAAOU,MAAP,eAAeC,SAAf,eACA,eAA4CX,QAAQ,CAAC,IAAD,CAApD,yCAAOY,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMH,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAAjB,CAEA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAI,WAAM,CACrCH,iBAAiB,CAACG,KAAD,CAAjB,CACAL,SAAS,CAAC,KAAD,CAAT,CACAM,OAAO,CAACC,GAAR,CAAYN,cAAZ,EACD,CAJ4B,EAA7B,CAKE,mBACA,cAAM,MAAM,CAAC,GAAb,CAAiB,MAAM,CAAC,KAAxB,wBACI,cAAO,SAAS,CAAG,UAAnB,CAA8B,OAAO,CAAC,eAAtC,oCADJ,cAII,MAAC,iBAAD,EAAmB,SAAS,CAAG,UAA/B,wBACA,KAAC,cAAD,EAAgB,OAAO,CAAEE,QAAzB,UACGF,cAAc,EAAI,mBADrB,EADA,CAICF,MAAM,eACL,KAAC,qBAAD,wBACE,KAAC,YAAD,WACGT,OAAO,CAACkB,GAAR,CAAY,SAAAC,MAAM,qBACjB,KAAC,QAAD,EAAU,OAAO,CAAEL,eAAe,CAACK,MAAD,CAAlC,UACGA,MADH,EAAiDC,IAAI,CAACC,MAAL,EAAjD,CADiB,EAAlB,CADH,EADF,EALF,GAJJ,cAqBI,KAAC,MAAD,EAAQ,OAAO,CAAEf,SAAS,CAACK,cAAD,CAA1B,4BArBJ,GADA,CA2BH,EACD,cAAeH,CAAAA,MAAf","sourcesContent":["import React, {useState} from \"react\";\r\n//import { findAllInRenderedTree } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport './App.css';\r\nimport {options, DropDownContainer, DropDownHeader, DropDownList, DropDownListContainer, ListItem} from './dropdown.js'\r\nimport buttonHit, {Button} from './buttonHit.js'\r\n\r\n\r\nfunction Search (){\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const toggling = () => setIsOpen(!isOpen);\r\n\r\n  const onOptionClicked = value => () => {\r\n    setSelectedOption(value);\r\n    setIsOpen(false);\r\n    console.log(selectedOption);\r\n  };\r\n    return (\r\n    <form action=\"/\" method=\"get\"> \r\n        <label className = \"question\" htmlFor=\"header-search\">\r\n            How do you feel today?\r\n        </label>\r\n        <DropDownContainer className = \"dropdown\">\r\n        <DropDownHeader onClick={toggling}>\r\n          {selectedOption || \"Choose an Emotion\"}\r\n        </DropDownHeader>\r\n        {isOpen && (\r\n          <DropDownListContainer>\r\n            <DropDownList>\r\n              {options.map(option => (\r\n                <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\r\n                  {option}\r\n                </ListItem>\r\n              ))}\r\n            </DropDownList>\r\n          </DropDownListContainer>\r\n        )}\r\n        \r\n      </DropDownContainer>\r\n        <Button onClick={buttonHit(selectedOption)}>\r\n            Receive Advice\r\n        </Button>\r\n    </form>\r\n    )\r\n};\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}