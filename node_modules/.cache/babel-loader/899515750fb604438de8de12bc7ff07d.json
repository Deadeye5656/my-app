{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\my-app\\\\src\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { findAllInRenderedTree } from \"react-dom/cjs/react-dom-test-utils.production.min\";\nimport styled from \"styled-components\";\nimport './App.css';\nimport { options, DropDownContainer, DropDownHeader, DropDownList, DropDownListContainer, ListItem } from './dropdown.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  background-color: #282c34;\n  color: white;\n  font-size: 16px;\n  padding: 10px 10px;\n  border-radius: 10px;\n  margin: 10px 0px;\n  cursor: pointer; \n  margin-bottom: 1.25em;\n`;\n_c = Button;\n\nfunction buttonHit(option) {\n  alert(\"Hello\");\n}\n\nfunction Search() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n    console.log(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/\",\n    method: \"get\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"header-search\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"How do you feel today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDownContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownHeader, {\n        onClick: toggling,\n        children: selectedOption || \"Choose an Emotion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(DropDownListContainer, {\n        children: /*#__PURE__*/_jsxDEV(DropDownList, {\n          children: options.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: onOptionClicked(option),\n            children: option\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: buttonHit,\n      children: \"Receive Advice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"BpVbkn/NswzhRYWTNyv0RP2ekPc=\");\n\n_c2 = Search;\n;\nexport default Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["C:/Users/david/my-app/src/search.js"],"names":["React","useState","findAllInRenderedTree","styled","options","DropDownContainer","DropDownHeader","DropDownList","DropDownListContainer","ListItem","Button","button","buttonHit","option","alert","Search","isOpen","setIsOpen","selectedOption","setSelectedOption","toggling","onOptionClicked","value","console","log","map","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,qBAAT,QAAsC,mDAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,EAAiBC,iBAAjB,EAAoCC,cAApC,EAAoDC,YAApD,EAAkEC,qBAAlE,EAAyFC,QAAzF,QAAwG,eAAxG;;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,M;;AAWN,SAASE,SAAT,CAAmBC,MAAnB,EAA0B;AACxBC,EAAAA,KAAK,CAAC,OAAD,CAAL;AACD;;AAED,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMmB,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAACD,MAAF,CAAhC;;AAEA,QAAMK,eAAe,GAAGC,KAAK,IAAI,MAAM;AACrCH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACD,GAJD;;AAKE,sBACA;AAAM,IAAA,MAAM,EAAC,GAAb;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,iBAAD;AAAA,8BACA,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEE,QAAzB;AAAA,kBACGF,cAAc,IAAI;AADrB;AAAA;AAAA;AAAA;AAAA,cADA,EAICF,MAAM,iBACL,QAAC,qBAAD;AAAA,+BACE,QAAC,YAAD;AAAA,oBACGZ,OAAO,CAACqB,GAAR,CAAYZ,MAAM,iBACjB,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEQ,eAAe,CAACR,MAAD,CAAlC;AAAA,sBACGA;AADH,aAAiDa,IAAI,CAACC,MAAL,EAAjD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAoBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEf,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA0BH;;GArCQG,M;;MAAAA,M;AAqCR;AAED,eAAeA,MAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport { findAllInRenderedTree } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport styled from \"styled-components\";\r\nimport './App.css';\r\nimport {options, DropDownContainer, DropDownHeader, DropDownList, DropDownListContainer, ListItem} from './dropdown.js'\r\n\r\nconst Button = styled.button`\r\n  background-color: #282c34;\r\n  color: white;\r\n  font-size: 16px;\r\n  padding: 10px 10px;\r\n  border-radius: 10px;\r\n  margin: 10px 0px;\r\n  cursor: pointer; \r\n  margin-bottom: 1.25em;\r\n`;\r\n\r\nfunction buttonHit(option){\r\n  alert(\"Hello\")\r\n}\r\n\r\nfunction Search (){\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const toggling = () => setIsOpen(!isOpen);\r\n\r\n  const onOptionClicked = value => () => {\r\n    setSelectedOption(value);\r\n    setIsOpen(false);\r\n    console.log(selectedOption);\r\n  };\r\n    return (\r\n    <form action=\"/\" method=\"get\"> \r\n        <label htmlFor=\"header-search\">\r\n            <span className=\"visually-hidden\">How do you feel today?</span>\r\n        </label>\r\n        <DropDownContainer>\r\n        <DropDownHeader onClick={toggling}>\r\n          {selectedOption || \"Choose an Emotion\"}\r\n        </DropDownHeader>\r\n        {isOpen && (\r\n          <DropDownListContainer>\r\n            <DropDownList>\r\n              {options.map(option => (\r\n                <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\r\n                  {option}\r\n                </ListItem>\r\n              ))}\r\n            </DropDownList>\r\n          </DropDownListContainer>\r\n        )}\r\n      </DropDownContainer>\r\n        <Button onClick={buttonHit}>\r\n            Receive Advice\r\n        </Button>\r\n    </form>\r\n    )\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}